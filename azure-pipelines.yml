trigger:
  - "*"

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: "Release"

# Comandos de script
steps:
  - task: UseDotNet@2
    displayName: "Use .NET SDK 6.x"
    inputs:
      packageType: sdk
      version: "6.x"

  - task: Npm@1
    displayName: "Run npm install"
    inputs:
      verbose: false

  - script: "./node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot"
    displayName: "Compile Sass assets"

  - task: gulp@1
    displayName: "Run gulp tasks"

    #                 Nome do Build da pipeline, Id do Build, Nome do Build
  - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
    displayName: "Write build info"
    workingDirectory: Tailspin.SpaceGame.Web/wwwroot

    # Restaura as dependencias e instala
  - task: DotNetCoreCLI@2
    displayName: "Restore project dependencies"
    inputs:
      command: "restore"
      projects: "**/*.csproj"

    # Criar o projeto
  - task: DotNetCoreCLI@2
    displayName: "Build the project - Release"
    inputs:
      command: "build"
      arguments: "--no-restore --configuration Release"
      projects: "**/*.csproj"

    # Publica ou empacota os resultados de build do app
  - task: DotNetCoreCLI@2
    displayName: "Publish the project - Release"
    inputs:
      command: "publish"
      projects: "**/*.csproj"
      publishWebProjects: false
      arguments: "--no-build --configuration Release --output $(Build.ArtifactStatingDirectory)/Release"
      zipAfterPublish: true

    # Publica o .zip da etapa anterior
  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact: drop"
    condition: succeeded() # Default
